GPU II
------

GPU II Client
-------------

Freepascal/Lazarus 

Base setup
----------
Client is separated into Client GUI and Client core.
Client core has ability to run in background or (either with interactive console shell or via telnet).
Client GUI includes a 3D OpenGL netmapper and chat window, job submission and job results windows.
Client GUI asks at startup for user and node configuration details which will be reported to superserver

Client core has one home GPU II server
It announces itself to the home GPU II server (each two minutes)
It retrieves a list of other available GPU II servers from the home server

Client core has bindings to ararat synapse library (by Lukas Gebauer) to communicate with server.

Client core has sqlite bindings to implement:
- logs of chats
- logs of computed jobs, results of jobs
- implement Rene Tegel's idea of distributed wan database
- implement Rene Tegel's search engine
- Sqlite will be used to communicate with Client GUI, e.g. via lock files? According to
 http://www.sqlite.org/faq.html#q5 this should be feasible :-). On windows shares it is unreliable,
  but we will use only on the same machine.
 

Sqlite is chosen instead of MySQL or PostgreSQL as we would like to have clients which can be installed
 in one click setup. 
 
Client GUI could include a sql console to query the sqllite db and a telnet client to communicate with gpu core.
This would be quite geekish, but only for advanced users.

Functionality:
--------------

Chat: integrated browser to server which redirects to home GPU II server which redirects to IRC channel
http://wiki.lazarus.freepascal.org/Webbrowser
or completely implemented by GPU project

Netmapper: Lazuarus OpenGLControl showing rotated earth with geolocated IPs retrieved from all webserver

Jobs: ability to send GPU jobs with broadcast or target node flag from webserver
      ability to retrieve jobs from webserver for our node

Network presence: like it is done now in filedistributor, additionally, clients can retrieve
 information from multiple GPU II servers one after the other

TCoreModule component to handle GPU jobs loaded with libraries (most plugins and frontends compatible with GPU I)
(already implemented under /src/client/packages/own/coremodules)

TXmlJobs component to handle XML work units
Trayicon minimize

Autoupdate compatible with GPU I

GPU II Server
-------------

PHP/mySQL

Functionality
-------------

Network presence for client: like it is done now in filedistributor. Client can retrieve a list
 of online GPU II servers as well

Network presence for server: server announces itself to GPU superserver and retrieves a list
 of other available nodes. If the GPU superserver is down, it sends back the latest retrieved list
 from the GPU superserver

Chat: redirection to IRC client
http://cgiirc.org/

Geolocation of IPs
http://www.ardamis.com/2008/01/27/how-to-geolocate-visitors-using-an-ip-to-country-database/

QueueXMLJobs:
component that queues jobs, jobs that are marked as broadcast can be retrieved from everyone

QueueXMLAnswer:
component that queues answers to jobs, answer to jobs

Filedistributor:
 ability to load zip files, and to distribute them via work units

Ability to distribute binary files based on architecture 


GPU II superserver
------------------

Only handles the availability of GPU II servers 
